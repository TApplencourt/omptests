
//
// Generated by LLVM NVPTX Back-End
//

.version 4.2
.target sm_37
.address_size 64


	// .globl	_Z6kernelRi
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.func _$_omp_outlined_$__wrapper
(
	.param .b32 _$_omp_outlined_$__wrapper_param_0,
	.param .b32 _$_omp_outlined_$__wrapper_param_1
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.func  (.param .b32 func_retval0) __kmpc_kernel_convergent_parallel
(
	.param .b64 __kmpc_kernel_convergent_parallel_param_0,
	.param .b64 __kmpc_kernel_convergent_parallel_param_1,
	.param .b64 __kmpc_kernel_convergent_parallel_param_2
)
;
.global .align 1 .b8 _$_str[12] = {32, 45, 62, 32, 97, 32, 61, 32, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_1[13] = {32, 45, 45, 62, 32, 97, 32, 61, 32, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_3[8] = {97, 32, 61, 32, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_4[8] = {98, 32, 61, 32, 37, 100, 10, 0};
.weak .global .align 1 .b8 __omp_offloading_802_2840874_main_l18_property[12] = {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.weak .global .align 8 .b8 __openmp_nvptx_shared_data_slots[260833280];
.extern .shared .align 8 .b64 omptarget_nvptx_threadPrivateContext;
.extern .shared .align 8 .b8 DataSharingState[896];
.extern .global .align 16 .b8 omptarget_nvptx_device_State[87784704];
.extern .shared .align 4 .u32 execution_param;
.extern .shared .align 8 .b64 omptarget_nvptx_workFn;

.visible .func _Z6kernelRi(
	.param .b64 _Z6kernelRi_param_0
)
{
	.local .align 8 .b8 	__local_depot0[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<42>;
	.reg .b16 	%rs<32>;
	.reg .b32 	%r<109>;
	.reg .b64 	%rd<219>;

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd76, [_Z6kernelRi_param_0];
	mov.u64 	%rd77, _$_str;
	cvta.global.u64 	%rd78, %rd77;
	add.u64 	%rd82, %SP, 8;
	add.u64 	%rd83, %SPL, 8;
	add.u64 	%rd84, %SP, 12;
	add.u64 	%rd4, %SPL, 12;
	add.u64 	%rd85, %SP, 16;
	add.u64 	%rd5, %SPL, 16;
	mov.u32 	%r23, -1;
	st.local.u32 	[%rd5], %r23;
	mov.u16 	%rs3, 0;
	st.local.u8 	[%rd4], %rs3;
	ld.u32 	%r24, [%rd76];
	st.local.u32 	[%rd83], %r24;
	{ // callseq 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd78;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r25, [retval0+0];
	} // callseq 0
	mov.u32	%r1, %tid.x;
	ld.shared.u32 	%r106, [execution_param];
	and.b32  	%r3, %r106, 1;
	and.b32  	%r26, %r3, 1;
	setp.eq.b32	%p1, %r26, 1;
	@%p1 bra 	LBB0_3;
	mov.u32	%r27, %ntid.x;
	add.s32 	%r28, %r27, -1;
	and.b32  	%r4, %r28, -32;
	setp.ge.s32	%p2, %r1, %r4;
	@%p2 bra 	LBB0_4;
	ld.shared.u64 	%rd199, [omptarget_nvptx_threadPrivateContext];
	mul.wide.u32 	%rd89, %r1, 2;
	add.s64 	%rd90, %rd199, %rd89;
	add.s64 	%rd197, %rd90, 295792;
	bra.uni 	LBB0_5;
LBB0_3:
	cvt.u64.u32	%rd200, %r1;
	ld.shared.u64 	%rd199, [omptarget_nvptx_threadPrivateContext];
	mul.wide.u32 	%rd87, %r1, 2;
	add.s64 	%rd88, %rd199, %rd87;
	mov.u16 	%rs4, 4;
	st.u16 	[%rd88+295792], %rs4;
	bra.uni 	LBB0_8;
LBB0_4:
	ld.shared.u64 	%rd199, [omptarget_nvptx_threadPrivateContext];
	add.s64 	%rd197, %rd199, 295792;
LBB0_5:
	mov.u16 	%rs5, 4;
	st.u16 	[%rd197], %rs5;
	@%p2 bra 	LBB0_6;
	cvt.u64.u32	%rd200, %r1;
	bra.uni 	LBB0_8;
LBB0_6:
	mov.u64 	%rd200, 0;
LBB0_8:
	shl.b64 	%rd92, %rd200, 3;
	add.s64 	%rd93, %rd199, %rd92;
	ld.u64 	%rd94, [%rd93+287600];
	ld.u8 	%rs6, [%rd94];
	and.b16  	%rs7, %rs6, 64;
	shr.u16 	%rs8, %rs6, 4;
	and.b16  	%rs9, %rs8, 1;
	or.b16  	%rs10, %rs9, %rs7;
	setp.ne.s16	%p4, %rs10, 0;
	@%p4 bra 	LBB0_20;
	bra.uni 	LBB0_9;
LBB0_20:
	setp.ne.s32	%p5, %r3, 0;
	@%p5 bra 	LBB0_23;
	mov.u32	%r29, %ntid.x;
	add.s32 	%r30, %r29, -1;
	and.b32  	%r31, %r30, -32;
	setp.ge.s32	%p6, %r1, %r31;
	@%p6 bra 	LBB0_22;
LBB0_23:
	cvt.u64.u32	%rd203, %r1;
	bra.uni 	LBB0_24;
LBB0_9:
	shr.u32 	%r46, %r1, 5;
	mov.u32 	%r43, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r43, 0; 
	vote.ballot.b32 	%r42, %p1; 
	}
	// end inline asm
	mul.wide.u32 	%rd121, %r46, 8;
	mov.u64 	%rd122, DataSharingState;
	add.s64 	%rd18, %rd122, %rd121;
	add.s64 	%rd20, %rd18, 512;
	mul.wide.u32 	%rd123, %r46, 4;
	add.s64 	%rd124, %rd122, %rd123;
	ld.shared.u64 	%rd210, [%rd18];
	ld.shared.u64 	%rd211, [%rd18+256];
	ld.shared.u64 	%rd212, [%rd18+512];
	ld.shared.u32 	%r107, [%rd124+768];
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r43, 0; 
	vote.ballot.b32 	%r44, %p1; 
	}
	// end inline asm
	cvt.s64.s32	%rd125, %r44;
	and.b32  	%r47, %r1, 31;
	mov.u32 	%r48, 32;
	sub.s32 	%r49, %r48, %r47;
	shl.b64 	%rd126, %rd125, %r49;
	cvt.u32.u64	%r50, %rd126;
	popc.b32 	%r51, %r50;
	setp.ne.s32	%p13, %r51, 0;
	@%p13 bra 	LBB0_19;
	add.s64 	%rd19, %rd18, 256;
	add.s64 	%rd21, %rd124, 768;
	st.shared.u32 	[%rd21], %r42;
	ld.shared.u64 	%rd202, [%rd19];
	ld.shared.u64 	%rd127, [%rd18];
	ld.u64 	%rd128, [%rd127+8];
	add.s64 	%rd26, %rd202, 8;
	ld.u64 	%rd201, [%rd127];
	setp.ge.u64	%p14, %rd128, %rd26;
	@%p14 bra 	LBB0_16;
	setp.eq.s64	%p16, %rd201, 0;
	@%p16 bra 	LBB0_14;
	ld.u64 	%rd131, [%rd201+8];
	add.s64 	%rd132, %rd201, 16;
	sub.s64 	%rd133, %rd131, %rd132;
	setp.gt.u64	%p17, %rd133, 255;
	@%p17 bra 	LBB0_15;
	{ // callseq 5
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd201;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 5
LBB0_14:
	mov.u64 	%rd134, 272;
	{ // callseq 6
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd134;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd201, [retval0+0];
	} // callseq 6
LBB0_15:
	mov.u64 	%rd135, 0;
	st.u64 	[%rd201], %rd135;
	add.s64 	%rd136, %rd201, 16;
	add.s64 	%rd137, %rd201, 272;
	st.u64 	[%rd201+8], %rd137;
	ld.shared.u64 	%rd138, [%rd18];
	st.u64 	[%rd138], %rd201;
	st.shared.u64 	[%rd18], %rd201;
	add.s64 	%rd139, %rd201, 24;
	st.shared.u64 	[%rd19], %rd139;
	st.shared.u64 	[%rd20], %rd136;
	bra.uni 	LBB0_19;
LBB0_22:
	mov.u64 	%rd203, 0;
LBB0_24:
	shl.b64 	%rd97, %rd203, 3;
	add.s64 	%rd98, %rd199, %rd97;
	ld.u64 	%rd99, [%rd98+287600];
	ld.u8 	%rs11, [%rd99];
	and.b16  	%rs12, %rs11, 80;
	setp.ne.s16	%p7, %rs12, 16;
	@%p7 bra 	LBB0_25;
	shr.u32 	%r37, %r1, 5;
	mov.u32 	%r34, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r34, 0; 
	vote.ballot.b32 	%r33, %p1; 
	}
	// end inline asm
	mul.wide.u32 	%rd100, %r37, 8;
	mov.u64 	%rd101, DataSharingState;
	add.s64 	%rd35, %rd101, %rd100;
	add.s64 	%rd37, %rd35, 512;
	mul.wide.u32 	%rd102, %r37, 4;
	add.s64 	%rd103, %rd101, %rd102;
	ld.shared.u64 	%rd210, [%rd35];
	ld.shared.u64 	%rd211, [%rd35+256];
	ld.shared.u64 	%rd212, [%rd35+512];
	ld.shared.u32 	%r107, [%rd103+768];
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r34, 0; 
	vote.ballot.b32 	%r35, %p1; 
	}
	// end inline asm
	cvt.s64.s32	%rd104, %r35;
	and.b32  	%r9, %r1, 31;
	mov.u32 	%r38, 32;
	sub.s32 	%r39, %r38, %r9;
	shl.b64 	%rd105, %rd104, %r39;
	cvt.u32.u64	%r40, %rd105;
	popc.b32 	%r41, %r40;
	setp.ne.s32	%p8, %r41, 0;
	@%p8 bra 	LBB0_36;
	add.s64 	%rd36, %rd35, 256;
	add.s64 	%rd38, %rd103, 768;
	st.shared.u32 	[%rd38], %r33;
	ld.shared.u64 	%rd205, [%rd36];
	ld.shared.u64 	%rd106, [%rd35];
	ld.u64 	%rd107, [%rd106+8];
	add.s64 	%rd43, %rd205, 256;
	ld.u64 	%rd204, [%rd106];
	setp.ge.u64	%p9, %rd107, %rd43;
	@%p9 bra 	LBB0_33;
	setp.eq.s64	%p11, %rd204, 0;
	@%p11 bra 	LBB0_31;
	ld.u64 	%rd110, [%rd204+8];
	add.s64 	%rd111, %rd204, 16;
	sub.s64 	%rd112, %rd110, %rd111;
	setp.gt.u64	%p12, %rd112, 8191;
	@%p12 bra 	LBB0_32;
	{ // callseq 2
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd204;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 2
LBB0_31:
	mov.u64 	%rd113, 8208;
	{ // callseq 3
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd204, [retval0+0];
	} // callseq 3
LBB0_32:
	mov.u64 	%rd114, 0;
	st.u64 	[%rd204], %rd114;
	add.s64 	%rd115, %rd204, 16;
	add.s64 	%rd116, %rd204, 8208;
	st.u64 	[%rd204+8], %rd116;
	ld.shared.u64 	%rd117, [%rd35];
	st.u64 	[%rd117], %rd204;
	st.shared.u64 	[%rd35], %rd204;
	add.s64 	%rd118, %rd204, 272;
	st.shared.u64 	[%rd36], %rd118;
	st.shared.u64 	[%rd37], %rd115;
	bra.uni 	LBB0_36;
LBB0_25:
	bra.uni 	LBB0_38;
LBB0_16:
	setp.eq.s64	%p15, %rd201, 0;
	@%p15 bra 	LBB0_18;
	{ // callseq 4
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd201;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 4
	ld.shared.u64 	%rd129, [%rd18];
	mov.u64 	%rd130, 0;
	st.u64 	[%rd129], %rd130;
	ld.shared.u64 	%rd202, [%rd19];
LBB0_18:
	st.shared.u64 	[%rd20], %rd202;
	st.shared.u64 	[%rd19], %rd26;
LBB0_19:
	membar.cta;
	ld.shared.u64 	%rd209, [%rd20];
	bra.uni 	LBB0_37;
LBB0_33:
	setp.eq.s64	%p10, %rd204, 0;
	@%p10 bra 	LBB0_35;
	{ // callseq 1
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd204;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 1
	ld.shared.u64 	%rd108, [%rd35];
	mov.u64 	%rd109, 0;
	st.u64 	[%rd108], %rd109;
	ld.shared.u64 	%rd205, [%rd36];
LBB0_35:
	st.shared.u64 	[%rd37], %rd205;
	st.shared.u64 	[%rd36], %rd43;
LBB0_36:
	membar.cta;
	ld.shared.u64 	%rd119, [%rd37];
	mul.wide.u32 	%rd120, %r9, 8;
	add.s64 	%rd209, %rd119, %rd120;
LBB0_37:
	st.u64 	[%rd209], %rd76;
	ld.shared.u32 	%r106, [execution_param];
LBB0_38:
	and.b32  	%r14, %r106, 1;
	and.b32  	%r52, %r14, 1;
	setp.eq.b32	%p18, %r52, 1;
	@%p18 bra 	LBB0_41;
	mov.u32	%r53, %ntid.x;
	add.s32 	%r54, %r53, -1;
	and.b32  	%r55, %r54, -32;
	setp.ge.s32	%p19, %r1, %r55;
	@%p19 bra 	LBB0_40;
LBB0_41:
	cvt.u64.u32	%rd213, %r1;
	bra.uni 	LBB0_42;
LBB0_40:
	mov.u64 	%rd213, 0;
LBB0_42:
	ld.shared.u64 	%rd59, [omptarget_nvptx_threadPrivateContext];
	shl.b64 	%rd141, %rd213, 3;
	add.s64 	%rd142, %rd59, %rd141;
	ld.u64 	%rd143, [%rd142+287600];
	ld.u8 	%rs13, [%rd143];
	and.b16  	%rs14, %rs13, 64;
	shr.u16 	%rs15, %rs13, 4;
	and.b16  	%rs16, %rs15, 1;
	or.b16  	%rs17, %rs16, %rs14;
	setp.ne.s16	%p20, %rs17, 0;
	@%p20 bra 	LBB0_51;
	bra.uni 	LBB0_43;
LBB0_51:
	mov.u64 	%rd79, _$_str_$_1;
	add.u64 	%rd80, %SP, 0;
	setp.ne.s32	%p21, %r14, 0;
	@%p21 bra 	LBB0_54;
	mov.u32	%r56, %ntid.x;
	add.s32 	%r57, %r56, -1;
	and.b32  	%r58, %r57, -32;
	setp.ge.s32	%p22, %r1, %r58;
	@%p22 bra 	LBB0_53;
LBB0_54:
	cvt.u64.u32	%rd214, %r1;
	bra.uni 	LBB0_55;
LBB0_43:
	mov.u64 	%rd187, _$_omp_outlined_$__wrapper;
	st.volatile.shared.u64 	[omptarget_nvptx_workFn], %rd187;
	ld.u64 	%rd60, [%rd59+287600];
	ld.u8 	%rs26, [%rd60];
	and.b16  	%rs27, %rs26, 16;
	setp.ne.s16	%p35, %rs27, 0;
	@%p35 bra 	LBB0_50;
	ld.u16 	%rs1, [%rd59+295792];
	mov.u32	%r86, %ntid.x;
	add.s32 	%r15, %r86, -1;
	setp.eq.s16	%p36, %rs1, 0;
	@%p36 bra 	LBB0_48;
	st.u16 	[%rd59+295792], %rs3;
	ld.u16 	%rs2, [%rd60+4];
	setp.eq.s16	%p37, %rs2, 0;
	@%p37 bra 	LBB0_47;
	setp.lt.u16	%p38, %rs1, %rs2;
	selp.b16	%rs29, %rs1, %rs2, %p38;
	cvt.u32.u16	%r108, %rs29;
	bra.uni 	LBB0_49;
LBB0_53:
	mov.u64 	%rd214, 0;
LBB0_55:
	cvta.global.u64 	%rd1, %rd79;
	cvta.to.local.u64 	%rd2, %rd80;
	shl.b64 	%rd145, %rd214, 3;
	add.s64 	%rd146, %rd59, %rd145;
	ld.u64 	%rd147, [%rd146+287600];
	ld.u8 	%rs18, [%rd147];
	and.b16  	%rs19, %rs18, 80;
	setp.ne.s16	%p23, %rs19, 16;
	@%p23 bra 	LBB0_64;
	add.u64 	%rd86, %SP, 24;
	add.u64 	%rd6, %SPL, 24;
	st.local.u32 	[%rd5], %r23;
	mov.u32 	%r73, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r73, 0; 
	vote.ballot.b32 	%r21, %p1; 
	}
	// end inline asm
	shr.u32 	%r75, %r1, 5;
	mul.wide.u32 	%rd169, %r75, 8;
	mov.u64 	%rd170, DataSharingState;
	add.s64 	%rd171, %rd170, %rd169;
	add.s64 	%rd63, %rd171, 512;
	cvt.u64.u32	%rd64, %r1;
	mov.u32	%r83, %ntid.x;
	add.s32 	%r84, %r83, -1;
	and.b32  	%r85, %r84, -32;
	setp.ge.s32	%p33, %r1, %r85;
LBB0_57:
	{ // callseq 10
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b32 param1;
	st.param.b32	[param1+0], %r21;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd84;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd85;
	.param .b32 retval0;
	call.uni (retval0), 
	__kmpc_kernel_convergent_parallel, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b32	%r76, [retval0+0];
	} // callseq 10
	and.b32  	%r77, %r76, 1;
	setp.eq.b32	%p31, %r77, 1;
	@!%p31 bra 	LBB0_63;
	bra.uni 	LBB0_58;
LBB0_58:
	ld.local.u32 	%r78, [%rd5];
	ld.shared.u64 	%rd175, [%rd63];
	mul.wide.s32 	%rd176, %r78, 8;
	add.s64 	%rd177, %rd175, %rd176;
	ld.u64 	%rd178, [%rd177];
	ld.u32 	%r79, [%rd178];
	st.local.u32 	[%rd2], %r79;
	{ // callseq 11
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd80;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r80, [retval0+0];
	} // callseq 11
	ld.shared.u32 	%r81, [execution_param];
	and.b32  	%r82, %r81, 1;
	setp.eq.b32	%p32, %r82, 1;
	@%p32 bra 	LBB0_61;
	@%p33 bra 	LBB0_60;
LBB0_61:
	mov.u64 	%rd215, %rd64;
	bra.uni 	LBB0_62;
LBB0_60:
	mov.u64 	%rd215, 0;
LBB0_62:
	ld.shared.u64 	%rd181, [omptarget_nvptx_threadPrivateContext];
	ld.local.u64 	%rd182, [%rd6+32];
	shl.b64 	%rd183, %rd215, 3;
	add.s64 	%rd184, %rd181, %rd183;
	st.u64 	[%rd184+287600], %rd182;
	ld.local.u16 	%rs24, [%rd6+40];
	shl.b64 	%rd185, %rd215, 1;
	add.s64 	%rd186, %rd181, %rd185;
	st.u16 	[%rd186+295792], %rs24;
LBB0_63:
	ld.local.u8 	%rs25, [%rd4];
	setp.eq.s16	%p34, %rs25, 1;
	@%p34 bra 	LBB0_78;
	bra.uni 	LBB0_57;
LBB0_64:
	@%p21 bra 	LBB0_67;
	mov.u32	%r59, %ntid.x;
	add.s32 	%r60, %r59, -1;
	and.b32  	%r61, %r60, -32;
	setp.ge.s32	%p25, %r1, %r61;
	@%p25 bra 	LBB0_66;
LBB0_67:
	cvt.u64.u32	%rd216, %r1;
	bra.uni 	LBB0_68;
LBB0_66:
	mov.u64 	%rd216, 0;
LBB0_68:
	shl.b64 	%rd149, %rd216, 3;
	add.s64 	%rd150, %rd59, %rd149;
	ld.u64 	%rd151, [%rd150+287600];
	ld.u8 	%rs20, [%rd151];
	and.b16  	%rs21, %rs20, 64;
	setp.eq.s16	%p26, %rs21, 0;
	@%p26 bra 	LBB0_78;
	@%p21 bra 	LBB0_72;
	mov.u32	%r62, %ntid.x;
	add.s32 	%r63, %r62, -1;
	and.b32  	%r64, %r63, -32;
	setp.ge.s32	%p28, %r1, %r64;
	@%p28 bra 	LBB0_71;
LBB0_72:
	cvt.u64.u32	%rd217, %r1;
	bra.uni 	LBB0_73;
LBB0_48:
	and.b32  	%r88, %r15, -32;
	ld.u16 	%r89, [%rd60+4];
	setp.eq.s32	%p39, %r89, 0;
	and.b32  	%r90, %r15, 65504;
	min.u32 	%r91, %r89, %r90;
	selp.b32	%r108, %r88, %r91, %p39;
	bra.uni 	LBB0_49;
LBB0_47:
	cvt.u32.u16	%r16, %rs1;
	and.b32  	%r87, %r15, 65504;
	min.u32 	%r108, %r16, %r87;
LBB0_49:
	ld.u64 	%rd188, [%rd60];
	st.u64 	[%rd59+56], %rd188;
	ld.u64 	%rd189, [%rd60+8];
	st.u64 	[%rd59+64], %rd189;
	st.u64 	[%rd59+80], %rd60;
	cvt.u16.u64	%rs30, %rd188;
	or.b16  	%rs31, %rs30, 48;
	st.u8 	[%rd59+56], %rs31;
	st.u16 	[%rd59+64], %r108;
	ld.volatile.u64 	%rd190, [%rd59+40];
	st.u64 	[%rd59+48], %rd190;
LBB0_50:
	bar.sync 	0;
	bar.sync 	0;
	bra.uni 	LBB0_78;
LBB0_71:
	mov.u64 	%rd217, 0;
LBB0_73:
	shl.b64 	%rd153, %rd217, 3;
	add.s64 	%rd154, %rd59, %rd153;
	ld.u64 	%rd155, [%rd154+287600];
	mov.u64 	%rd156, 32;
	{ // callseq 7
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd156;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd157, [retval0+0];
	} // callseq 7
	ld.u64 	%rd158, [%rd155];
	st.u64 	[%rd157], %rd158;
	ld.u64 	%rd159, [%rd155+8];
	st.u64 	[%rd157+8], %rd159;
	st.u64 	[%rd157+24], %rd155;
	st.u16 	[%rd157+6], %rs3;
	mov.u16 	%rs23, 1;
	st.u16 	[%rd157+8], %rs23;
	ld.shared.u64 	%rd160, [omptarget_nvptx_threadPrivateContext];
	add.s64 	%rd161, %rd160, %rd153;
	st.u64 	[%rd161+287600], %rd157;
	ld.u32 	%r65, [%rd76];
	st.local.u32 	[%rd2], %r65;
	{ // callseq 8
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd80;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r66, [retval0+0];
	} // callseq 8
	ld.shared.u32 	%r67, [execution_param];
	and.b32  	%r68, %r67, 1;
	setp.eq.b32	%p29, %r68, 1;
	@%p29 bra 	LBB0_76;
	mov.u32	%r69, %ntid.x;
	add.s32 	%r70, %r69, -1;
	and.b32  	%r71, %r70, -32;
	setp.ge.s32	%p30, %r1, %r71;
	@%p30 bra 	LBB0_75;
LBB0_76:
	cvt.u64.u32	%rd218, %r1;
	bra.uni 	LBB0_77;
LBB0_75:
	mov.u64 	%rd218, 0;
LBB0_77:
	ld.shared.u64 	%rd164, [omptarget_nvptx_threadPrivateContext];
	shl.b64 	%rd165, %rd218, 3;
	add.s64 	%rd166, %rd164, %rd165;
	ld.u64 	%rd167, [%rd166+287600];
	ld.u64 	%rd168, [%rd167+24];
	st.u64 	[%rd166+287600], %rd168;
	{ // callseq 9
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 9
LBB0_78:
	mov.u32 	%r93, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r93, 0; 
	vote.ballot.b32 	%r92, %p1; 
	}
	// end inline asm
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r93, 0; 
	vote.ballot.b32 	%r94, %p1; 
	}
	// end inline asm
	cvt.s64.s32	%rd191, %r94;
	and.b32  	%r96, %r1, 31;
	mov.u32 	%r97, 32;
	sub.s32 	%r98, %r97, %r96;
	shl.b64 	%rd192, %rd191, %r98;
	cvt.u32.u64	%r99, %rd192;
	popc.b32 	%r100, %r99;
	setp.ne.s32	%p40, %r100, 0;
	@%p40 bra 	LBB0_81;
	shr.u32 	%r101, %r1, 5;
	mul.wide.u32 	%rd193, %r101, 4;
	mov.u64 	%rd194, DataSharingState;
	add.s64 	%rd195, %rd194, %rd193;
	not.b32 	%r102, %r92;
	ld.shared.u32 	%r103, [%rd195+768];
	and.b32  	%r104, %r103, %r102;
	st.shared.u32 	[%rd195+768], %r104;
	setp.ne.s32	%p41, %r104, 0;
	@%p41 bra 	LBB0_81;
	add.s64 	%rd72, %rd195, 768;
	mul.wide.u32 	%rd196, %r101, 8;
	add.s64 	%rd75, %rd194, %rd196;
	add.s64 	%rd73, %rd75, 512;
	add.s64 	%rd74, %rd75, 256;
	st.shared.u64 	[%rd75], %rd210;
	st.shared.u64 	[%rd74], %rd211;
	st.shared.u64 	[%rd73], %rd212;
	st.shared.u32 	[%rd72], %r107;
LBB0_81:
	membar.cta;
	ret;

}
.func _$_omp_outlined_$__wrapper(
	.param .b32 _$_omp_outlined_$__wrapper_param_0,
	.param .b32 _$_omp_outlined_$__wrapper_param_1
)
{
	.local .align 8 .b8 	__local_depot1[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<22>;

	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u16 	%rs1, [_$_omp_outlined_$__wrapper_param_0];
	mov.u64 	%rd9, _$_str_$_1;
	cvta.global.u64 	%rd1, %rd9;
	add.u64 	%rd10, %SP, 0;
	add.u64 	%rd2, %SPL, 0;
	setp.eq.s16	%p1, %rs1, 1;
	@%p1 bra 	LBB1_3;
	setp.ne.s16	%p2, %rs1, 0;
	@%p2 bra 	LBB1_5;
	mov.u32	%r4, %ntid.x;
	add.s32 	%r5, %r4, -1;
	shr.s32 	%r6, %r5, 5;
	mul.wide.u32 	%rd16, %r6, 8;
	mov.u64 	%rd17, DataSharingState;
	add.s64 	%rd18, %rd17, %rd16;
	ld.shared.u64 	%rd20, [%rd18+512];
	bra.uni 	LBB1_4;
LBB1_3:
	ld.param.u32 	%r1, [_$_omp_outlined_$__wrapper_param_1];
	mov.u32	%r2, %tid.x;
	shr.u32 	%r3, %r2, 5;
	mul.wide.u32 	%rd11, %r3, 8;
	mov.u64 	%rd12, DataSharingState;
	add.s64 	%rd13, %rd12, %rd11;
	ld.shared.u64 	%rd14, [%rd13+512];
	mul.wide.s32 	%rd15, %r1, 8;
	add.s64 	%rd20, %rd14, %rd15;
LBB1_4:
	ld.u64 	%rd21, [%rd20];
LBB1_5:
	ld.u32 	%r7, [%rd21];
	st.local.u32 	[%rd2], %r7;
	{ // callseq 12
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r8, [retval0+0];
	} // callseq 12
	ret;

}
	// .weak	__omp_offloading_802_2840874_main_l18
.weak .entry __omp_offloading_802_2840874_main_l18(
	.param .u64 __omp_offloading_802_2840874_main_l18_param_0,
	.param .u64 __omp_offloading_802_2840874_main_l18_param_1
)
{
	.local .align 8 .b8 	__local_depot2[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<7>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<109>;

	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd29, [__omp_offloading_802_2840874_main_l18_param_0];
	mov.u32	%r1, %tid.x;
	mov.u32	%r2, %ntid.x;
	add.s32 	%r10, %r2, -1;
	and.b32  	%r3, %r10, -32;
	setp.ne.s32	%p2, %r1, %r3;
	@%p2 bra 	LBB2_1;
	mov.u32 	%r12, 0;
	st.shared.u32 	[execution_param], %r12;
	// begin inline asm
	mov.u32 %r11, %smid;
	// end inline asm
	and.b32  	%r13, %r11, 15;
	mul.wide.u32 	%rd35, %r13, 5486544;
	mov.u64 	%rd36, omptarget_nvptx_device_State;
	add.s64 	%rd37, %rd36, %rd35;
	cvta.global.u64 	%rd7, %rd37;
	add.s64 	%rd38, %rd7, 5486464;
	atom.add.u32 	%r14, [%rd38], 1;
	and.b32  	%r15, %r14, 15;
	shr.u32 	%r16, %r14, 3;
	and.b32  	%r4, %r16, 536870910;
	cvt.u64.u32	%rd8, %r15;
	mul.wide.u32 	%rd39, %r15, 4;
	add.s64 	%rd40, %rd7, %rd39;
	add.s64 	%rd9, %rd40, 5486468;
LBB2_3:
	atom.add.u32 	%r17, [%rd9], 0;
	setp.ne.s32	%p3, %r17, %r4;
	@%p3 bra 	LBB2_3;
	add.s32 	%r18, %r2, 65504;
	shl.b64 	%rd41, %rd8, 3;
	add.s64 	%rd42, %rd7, %rd41;
	add.s64 	%rd43, %rd42, 5486336;
	atom.add.u64 	%rd44, [%rd43], 0;
	setp.eq.s64	%p4, %rd44, 0;
	mul.lo.s64 	%rd45, %rd8, 342896;
	add.s64 	%rd46, %rd7, %rd45;
	selp.b64	%rd10, %rd46, %rd44, %p4;
	and.b32  	%r19, %r4, 67108862;
	or.b32  	%r20, %r19, 1;
	atom.exch.b32 	%r21, [%rd9], %r20;
	st.shared.u64 	[omptarget_nvptx_threadPrivateContext], %rd10;
	ld.shared.u32 	%r22, [execution_param];
	and.b32  	%r23, %r22, 1;
	setp.eq.b32	%p5, %r23, 1;
	cvt.u64.u32	%rd47, %r1;
	selp.b64	%rd48, %rd47, 0, %p5;
	shl.b64 	%rd49, %rd48, 3;
	add.s64 	%rd50, %rd10, %rd49;
	mov.u64 	%rd51, 0;
	st.u64 	[%rd50+287600], %rd51;
	shl.b64 	%rd52, %rd48, 1;
	add.s64 	%rd53, %rd10, %rd52;
	mov.u16 	%rs2, 0;
	st.u16 	[%rd53+295792], %rs2;
	st.u64 	[%rd50+297840], %rd51;
	st.u8 	[%rd10], %rs2;
	add.s32 	%r24, %r2, 65535;
	st.u16 	[%rd10+6], %rs2;
	mov.u16 	%rs3, 1;
	st.u16 	[%rd10+8], %rs3;
	mov.u64 	%rd54, 1;
	st.u64 	[%rd10+16], %rd54;
	st.u64 	[%rd10+32], %rd51;
	st.volatile.u64 	[%rd10+40], %rd51;
	st.u8 	[%rd10+88], %rs2;
	st.u64 	[%rd50+287600], %rd10;
	cvt.u16.u32	%rs4, %r24;
	and.b16  	%rs5, %rs4, -32;
	st.u16 	[%rd10+2], %rs5;
	st.u16 	[%rd10+4], %r18;
	shr.u32 	%r5, %r1, 5;
	setp.ne.s32	%p6, %r5, 31;
	@%p6 bra 	LBB2_6;
	add.s64 	%rd106, %rd10, 254560;
	add.s64 	%rd60, %rd10, 254832;
	st.v2.u64 	[%rd10+254560], {%rd51, %rd60};
	mov.u64 	%rd105, 31;
	bra.uni 	LBB2_7;
LBB2_1:
	mov.u32 	%r48, 0;
	bra.uni 	LBB2_8;
LBB2_6:
	cvt.u64.u32	%rd105, %r5;
	mul.wide.u32 	%rd55, %r5, 8208;
	add.s64 	%rd56, %rd10, %rd55;
	add.s64 	%rd106, %rd56, 112;
	add.s64 	%rd57, %rd56, 8320;
	st.v2.u64 	[%rd56+112], {%rd51, %rd57};
LBB2_7:
	shl.b64 	%rd62, %rd105, 3;
	mov.u64 	%rd63, DataSharingState;
	add.s64 	%rd64, %rd63, %rd62;
	st.shared.u64 	[%rd64], %rd106;
	add.s64 	%rd65, %rd106, 16;
	st.shared.u64 	[%rd64+256], %rd65;
	mov.u32 	%r48, 1;
LBB2_8:
	bar.sync 	0;
	add.s32 	%r26, %r2, -32;
	setp.ge.u32	%p7, %r1, %r26;
	@%p7 bra 	LBB2_22;
	add.u64 	%rd32, %SP, 0;
	and.b32  	%r29, %r1, 31;
	mov.u32 	%r28, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r28, 0; 
	vote.ballot.b32 	%r27, %p1; 
	}
	// end inline asm
	mov.u32 	%r30, 32;
	sub.s32 	%r31, %r30, %r29;
	shl.b32 	%r32, %r27, %r31;
	popc.b32 	%r33, %r32;
	setp.ne.s32	%p8, %r33, 0;
	@%p8 bra 	LBB2_14;
	shr.u32 	%r7, %r1, 5;
	ld.shared.u64 	%rd16, [omptarget_nvptx_threadPrivateContext];
	setp.ne.s32	%p9, %r7, 31;
	@%p9 bra 	LBB2_12;
	add.s64 	%rd108, %rd16, 254560;
	add.s64 	%rd71, %rd16, 254832;
	mov.u64 	%rd72, 0;
	st.v2.u64 	[%rd16+254560], {%rd72, %rd71};
	mov.u64 	%rd107, 31;
	bra.uni 	LBB2_13;
LBB2_12:
	cvt.u64.u32	%rd107, %r7;
	mul.wide.u32 	%rd66, %r7, 8208;
	add.s64 	%rd67, %rd16, %rd66;
	add.s64 	%rd108, %rd67, 112;
	add.s64 	%rd68, %rd67, 8320;
	mov.u64 	%rd69, 0;
	st.v2.u64 	[%rd67+112], {%rd69, %rd68};
LBB2_13:
	shl.b64 	%rd73, %rd107, 3;
	mov.u64 	%rd74, DataSharingState;
	add.s64 	%rd75, %rd74, %rd73;
	st.shared.u64 	[%rd75], %rd108;
	add.s64 	%rd76, %rd108, 16;
	st.shared.u64 	[%rd75+256], %rd76;
LBB2_14:
	cvta.to.local.u64 	%rd4, %rd32;
	cvt.u64.u32	%rd22, %r1;
	cvt.u16.u32	%rs1, %r1;
	mov.pred 	%p10, 0;
	mov.u16 	%rs6, 0;
	shl.b64 	%rd88, %rd22, 3;
	mov.pred 	%p14, -1;
	bra.uni 	LBB2_15;
LBB2_21:
	bar.sync 	0;
LBB2_15:
	bar.sync 	0;
	ld.volatile.shared.u64 	%rd77, [omptarget_nvptx_workFn];
	st.local.u64 	[%rd4], %rd77;
	setp.eq.s64	%p11, %rd77, 0;
	mov.pred 	%p18, %p10;
	@%p11 bra 	LBB2_18;
	ld.shared.u64 	%rd23, [omptarget_nvptx_threadPrivateContext];
	ld.u16 	%r34, [%rd23+64];
	setp.ge.u32	%p13, %r1, %r34;
	mov.pred 	%p18, %p10;
	@%p13 bra 	LBB2_18;
	shl.b64 	%rd78, %rd22, 5;
	add.s64 	%rd79, %rd23, %rd78;
	add.s64 	%rd80, %rd79, 254832;
	ld.u64 	%rd81, [%rd23+56];
	st.u64 	[%rd79+254832], %rd81;
	ld.u64 	%rd82, [%rd23+64];
	st.u64 	[%rd79+254840], %rd82;
	ld.u64 	%rd83, [%rd23+80];
	st.u64 	[%rd79+254856], %rd83;
	st.u16 	[%rd79+254838], %rs1;
	add.s64 	%rd85, %rd23, %rd88;
	st.u64 	[%rd85+287600], %rd80;
	ld.volatile.u64 	%rd86, [%rd23+40];
	st.u64 	[%rd85+297840], %rd86;
	mov.pred 	%p18, %p14;
LBB2_18:
	ld.volatile.u64 	%rd24, [%SP+0];
	setp.eq.s64	%p15, %rd24, 0;
	@%p15 bra 	LBB2_22;
	@!%p18 bra 	LBB2_21;
	bra.uni 	LBB2_20;
LBB2_20:
	{ // callseq 13
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b16	[param0+0], %rs6;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	prototype_13 : .callprototype ()_ (.param .b32 _, .param .b32 _);
	call 
	%rd24, 
	(
	param0, 
	param1
	)
	, prototype_13;
	} // callseq 13
	ld.shared.u64 	%rd87, [omptarget_nvptx_threadPrivateContext];
	add.s64 	%rd89, %rd87, %rd88;
	ld.u64 	%rd90, [%rd89+287600];
	ld.u64 	%rd91, [%rd90+24];
	st.u64 	[%rd89+287600], %rd91;
	bra.uni 	LBB2_21;
LBB2_22:
	setp.eq.s32	%p16, %r48, 0;
	@%p16 bra 	LBB2_26;
	mov.u64 	%rd30, _$_str_$_3;
	mov.u64 	%rd31, _$_str_$_4;
	add.u64 	%rd33, %SP, 8;
	add.u64 	%rd34, %SP, 16;
	cvta.to.global.u64 	%rd1, %rd29;
	cvta.global.u64 	%rd2, %rd30;
	cvta.global.u64 	%rd3, %rd31;
	add.u64 	%rd5, %SPL, 8;
	add.u64 	%rd6, %SPL, 16;
	ld.global.u32 	%r36, [%rd1];
	st.local.u32 	[%rd5], %r36;
	{ // callseq 14
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd33;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r37, [retval0+0];
	} // callseq 14
	ld.global.u32 	%r38, [%rd1];
	st.local.u32 	[%rd6], %r38;
	{ // callseq 15
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r39, [retval0+0];
	} // callseq 15
	{ // callseq 16
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	call.uni 
	_Z6kernelRi, 
	(
	param0
	);
	} // callseq 16
	// begin inline asm
	mov.u32 %r35, %smid;
	// end inline asm
	and.b32  	%r40, %r35, 15;
	mul.wide.u32 	%rd94, %r40, 5486544;
	mov.u64 	%rd95, omptarget_nvptx_device_State;
	add.s64 	%rd96, %rd95, %rd94;
	cvta.global.u64 	%rd25, %rd96;
	ld.shared.u64 	%rd26, [omptarget_nvptx_threadPrivateContext];
	add.s64 	%rd97, %rd25, 5486532;
	atom.add.u32 	%r41, [%rd97], 1;
	and.b32  	%r42, %r41, 15;
	shr.u32 	%r43, %r41, 3;
	or.b32  	%r8, %r43, 1;
	cvt.u64.u32	%rd27, %r42;
	mul.wide.u32 	%rd98, %r42, 4;
	add.s64 	%rd99, %rd25, %rd98;
	add.s64 	%rd28, %rd99, 5486468;
LBB2_24:
	atom.add.u32 	%r44, [%rd28], 0;
	setp.ne.s32	%p17, %r44, %r8;
	@%p17 bra 	LBB2_24;
	shl.b64 	%rd100, %rd27, 3;
	add.s64 	%rd101, %rd25, %rd100;
	add.s64 	%rd102, %rd101, 5486336;
	atom.exch.b64 	%rd103, [%rd102], %rd26;
	add.s32 	%r45, %r8, 1;
	and.b32  	%r46, %r45, 67108862;
	atom.exch.b32 	%r47, [%rd28], %r46;
	mov.u64 	%rd104, 0;
	st.volatile.shared.u64 	[omptarget_nvptx_workFn], %rd104;
	bar.sync 	0;
LBB2_26:
	ret;

}
.func  (.param .b32 func_retval0) __kmpc_kernel_convergent_parallel(
	.param .b64 __kmpc_kernel_convergent_parallel_param_0,
	.param .b64 __kmpc_kernel_convergent_parallel_param_1,
	.param .b64 __kmpc_kernel_convergent_parallel_param_2
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<18>;

	ld.param.u64 	%rd4, [__kmpc_kernel_convergent_parallel_param_0];
	mov.u32 	%r11, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r11, 0; 
	vote.ballot.b32 	%r10, %p1; 
	}
	// end inline asm
	ld.param.u64 	%rd5, [__kmpc_kernel_convergent_parallel_param_1];
	ld.param.u64 	%rd6, [__kmpc_kernel_convergent_parallel_param_2];
	ld.u32 	%r13, [%rd6];
	add.s32 	%r14, %r13, 1;
	shr.u32 	%r15, %r10, %r14;
	neg.s32 	%r16, %r15;
	and.b32  	%r17, %r15, %r16;
	clz.b32 	%r18, %r17;
	add.s32 	%r19, %r13, 32;
	sub.s32 	%r2, %r19, %r18;
	st.u32 	[%rd6], %r2;
	popc.b32 	%r20, %r15;
	setp.eq.s32	%p2, %r20, 1;
	selp.u16	%rs1, 1, 0, %p2;
	st.u8 	[%rd5], %rs1;
	// begin inline asm
	mov.u32 %r12, %lanemask_lt;
	// end inline asm
	mov.u32	%r32, %tid.x;
	ld.shared.u32 	%r22, [execution_param];
	and.b32  	%r23, %r22, 1;
	setp.eq.b32	%p3, %r23, 1;
	@%p3 bra 	LBB3_3;
	mov.u32	%r25, %ntid.x;
	add.s32 	%r26, %r25, -1;
	and.b32  	%r27, %r26, -32;
	setp.ge.s32	%p4, %r32, %r27;
	@%p4 bra 	LBB3_2;
	bra.uni 	LBB3_3;
LBB3_2:
	mov.u32 	%r32, 0;
LBB3_3:
	and.b32  	%r21, %r12, %r10;
	and.b32  	%r28, %r32, 992;
	add.s32 	%r6, %r28, %r2;
	ld.shared.u64 	%rd1, [omptarget_nvptx_threadPrivateContext];
	mul.wide.u32 	%rd7, %r32, 2;
	add.s64 	%rd8, %rd1, %rd7;
	ld.u16 	%rs2, [%rd8+295792];
	cvt.u32.u16	%r29, %rs2;
	st.u16 	[%rd4+40], %rs2;
	shfl.idx.b32 %r7, %r29, %r2, 31;
	setp.gt.s32	%p5, %r7, 0;
	setp.eq.s32	%p6, %r32, %r6;
	and.pred  	%p7, %p6, %p5;
	@!%p7 bra 	LBB3_5;
	bra.uni 	LBB3_4;
LBB3_4:
	add.s64 	%rd3, %rd8, 295792;
	mov.u16 	%rs3, 0;
	st.u16 	[%rd3], %rs3;
LBB3_5:
	popc.b32 	%r33, %r10;
	popc.b32 	%r3, %r21;
	setp.lt.s32	%p8, %r7, 1;
	@%p8 bra 	LBB3_7;
	min.s32 	%r33, %r33, %r7;
LBB3_7:
	and.b32  	%r30, %r33, 65535;
	setp.ge.u32	%p10, %r3, %r30;
	@%p10 bra 	LBB3_8;
	cvt.u64.u32	%rd2, %r32;
	shl.b64 	%rd9, %rd2, 3;
	add.s64 	%rd10, %rd1, 287600;
	add.s64 	%rd11, %rd10, %rd9;
	ld.u64 	%rd12, [%rd11];
	mul.wide.s32 	%rd13, %r6, 8;
	add.s64 	%rd14, %rd10, %rd13;
	ld.u64 	%rd15, [%rd14];
	st.u64 	[%rd4+32], %rd12;
	ld.u64 	%rd16, [%rd15];
	st.u64 	[%rd4], %rd16;
	ld.u64 	%rd17, [%rd15+8];
	st.u64 	[%rd4+8], %rd17;
	st.u64 	[%rd4+24], %rd15;
	cvt.u16.u64	%rs4, %rd16;
	or.b16  	%rs5, %rs4, 64;
	st.u8 	[%rd4], %rs5;
	st.u16 	[%rd4+8], %r33;
	st.u16 	[%rd4+6], %r3;
	st.u64 	[%rd11], %rd4;
	mov.pred 	%p12, -1;
	bra.uni 	LBB3_10;
LBB3_8:
	mov.pred 	%p12, 0;
LBB3_10:
	selp.u32	%r31, 1, 0, %p12;
	st.param.b32	[func_retval0+0], %r31;
	ret;

}

